In this video, we’re going to cover an introduction to Kiln projects, an overview of the client tools, and three different ways to get your code into Kiln. The first thing we’re going to do is create a new project. Projects are the largest organizational unit within Kiln. That’s where you group repositories together and set up permissions for users.

Let’s create a project called ‘control panel’ and take a look at it. We’re going to add some repositories related to our control panel project. The first one I’m going to add is my main control panel code base. I’m going to leave the repo empty for now as I set things up. My other bits of code are auxiliary to the main project, so I’m going to create a group called ‘tools’. You can create as many groups as you want to stay organized. Let’s create repositories for ‘solari-board’ and ‘big board widgets’.

Let’s go ahead and take a look at the Kiln client in ‘tools’. The Kiln client is going to package the command line tools, as well as some GUI tools, for both Windows and Mac. Let’s also grab the Kiln importer, which provides a quick and easy way to import repositories into Kiln. The first way we’re going to get code into Kiln is with the Kiln importer. I paste in my repository URL, and it’s going to determine that it’s a Git repository. It doesn’t have to do any conversion since Kiln speaks Git natively. Now I just need to grab my Kiln repository URL, paste it in, and sign in to Kiln. When I click ‘next’, it’ll log into Kiln and push my code up. Then, clicking ‘finish’, I can view the repository in the browser.

The next thing I’m going to push is stored as a Mercurial repository on my local machine. I’m going to navigate to the code locally. Since it’s already a Mercurial repo, all I have to do is push it to Kiln. Because it’s pretty large, the first push will take a while. Future pushes will be incremental and faster.